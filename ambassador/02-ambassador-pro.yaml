# @TEMPLATE@

######################################################################
# Configure Ambassador OSS to use Ambassador Pro.
---
apiVersion: getambassador.io/v1
kind: RateLimitService
metadata:
  name: ambassador-pro-ratelimit
spec:
  service: "127.0.0.1:8500"
---
apiVersion: getambassador.io/v1
kind: AuthService
metadata:
  name: ambassador-pro-auth
spec:
  proto: grpc
  auth_service: "127.0.0.1:8500"
  allow_request_body: false # setting this to 'true' allows Plugin and External filters to access the body, but has performance overhead
---
# DevPortal
apiVersion: getambassador.io/v1
kind: Mapping
metadata:
  name: ambassador-pro-devportal
spec:
  prefix: /docs
  service: "127.0.0.1:8500"
---
apiVersion: getambassador.io/v1beta2
kind: FilterPolicy
metadata:
  name: ambassador-pro-internal-access-control
spec:
  rules:
    - host: "*"
      path: "*/.ambassador-internal/*"
      filters:
        - name: ambassador-pro-internal-access-control
---
apiVersion: getambassador.io/v1beta2
kind: Filter
metadata:
  name: ambassador-pro-internal-access-control
spec:
  Internal: {}
---
# This mapping needs to exist, but is never actually followed.
apiVersion: getambassador.io/v1
kind: Mapping
metadata:
  name: callback-mapping
spec:
  prefix: /callback
  service: NoTaReAlSeRvIcE

######################################################################
# Create the 'ambassador', 'ambassador-admin', and 'ambassador-pro'
# Services.
---
apiVersion: v1
kind: Service
metadata:
  name: ambassador
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v1
      kind: ConsulResolver
      name: consul-dc1
      address: consul-server.default.svc.cluster.local:8500
      datacenter: dc1
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
   - name: http
     port: 80
     targetPort: 8080
   - name: https
     port: 443
     targetPort: 8443
  selector:
    service: ambassador
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: ambassador-admin
  name: ambassador-admin
spec:
  type: NodePort
  ports:
  - name: ambassador-admin
    port: 8877
    targetPort: 8877
  selector:
    service: ambassador
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: ambassador-pro
  name: ambassador-pro
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
  selector:
    service: ambassador

######################################################################
# Create the Deployment backing the 'ambassador', 'ambassador-admin',
# and 'ambassador-pro' Services.
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ambassador
spec:
  replicas: 1
  selector:
    matchLabels:
      service: ambassador
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
        "consul.hashicorp.com/connect-inject": "false"
      labels:
        service: ambassador
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  service: ambassador
              topologyKey: kubernetes.io/hostname
      serviceAccountName: ambassador
      containers:
      - name: ambassador
        image: quay.io/datawire/ambassador_pro:amb-core-{{env "AMBASSADOR_PRO_VERSION"}}
        resources:
          limits:
            cpu: 1
            memory: 400Mi
          requests:
            cpu: 200m
            memory: 100Mi
        env:
        - name: AMBASSADOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AMBASSADOR_LICENSE_KEY 
          valueFrom:
            secretKeyRef:
              name: ambassador-pro-license-key
              key: key
        - name: STATSD_ENABLED
          value: "true"
        - name: STATSD_HOST
          value: "statsd-sink.monitoring.svc.cluster.local"
        ports:
        - name: http
          containerPort: 8080
        - name: https
          containerPort: 8443
        - name: admin
          containerPort: 8877
        livenessProbe:
          httpGet:
            path: /ambassador/v0/check_alive
            port: 8877
          initialDelaySeconds: 30
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /ambassador/v0/check_ready
            port: 8877
          initialDelaySeconds: 30
          periodSeconds: 3
      - name: ambassador-pro
        image: quay.io/datawire/ambassador_pro:amb-sidecar-{{env "AMBASSADOR_PRO_VERSION"}}
        ports:
        - name: http
          containerPort: 8500
        env:
        - name: REDIS_SOCKET_TYPE 
          value: tcp
        - name: APP_LOG_LEVEL
          value: "debug"
        - name: REDIS_URL 
          value: ambassador-pro-redis:6379
        - name: AMBASSADOR_LICENSE_KEY 
          valueFrom:
            secretKeyRef:
              name: ambassador-pro-license-key
              key: key
        # DevPortal settings
        # Set this to the address that Ambassador is externally-reachable from
        - name: AMBASSADOR_URL
          value: {{env "AMBASSADOR_URL"}}
        # To customize content and look&feel fork this repo and point to it
        - name: APRO_DEVPORTAL_CONTENT_URL
          value: {{env "APRO_DEVPORTAL_CONTENT_URL"}}
        # Change this if you want different poll rate for getting OpenAPI docs:
        - name: POLL_EVERY_SECS
          value: "60"

      restartPolicy: Always
      securityContext:
        runAsUser: 8888
